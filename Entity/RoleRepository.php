<?php

namespace RybakDigital\Bundle\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * RoleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoleRepository extends EntityRepository
{
    /**
     * Check if role of given Id or name exists
     */
    public function isValidRole($roleSpec, $returnRole = false)
    {
        if ($role = $this->getRoleByIdOrName($roleSpec)) {
            if ($returnRole) {
                return $role;
            }

            return true;
        }

        return false;
    }

    /**
     * Gets Role object by id or valid name
     *
     * @param   string|int          $roleSpec
     * @return  Role|false  Returns Role object if found, otherwise false
     */
    public function getRoleByIdOrName($roleSpec)
    {
        $q = $this
            ->createQueryBuilder('r')
            ->select('r')
            ->where('r.id = :roleSpec')
            ->orWhere('r.role = :roleSpec')
            ->setParameter('roleSpec', $roleSpec)
            ->getQuery();

        try {
            // The Query::getSingleResult() method throws an exception
            // if there is no record matching the criteria.
            return $q->getSingleResult();
        } catch (\Exception $e) {
            return false;
        }
    }
}
